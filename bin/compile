#!/bin/bash
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2

opam_version="2.1.4"

if [[ ! -e $CACHE_DIR/bin/opam ]]; then
    echo "opam not cached, downloading"
    wget https://github.com/ocaml/opam/releases/download/$opam_version/opam-$opam_version-x86_64-linux
    mkdir -p $CACHE_DIR/bin
    install opam-$opam_version-x86_64-linux $CACHE_DIR/bin/opam
fi
export PATH=$CACHE_DIR/bin:$PATH
mkdir -p $CACHE_DIR/.opam
export OPAMROOT=$CACHE_DIR/.opam
if [[ ! -e $CACHE_DIR/.opam ]]; then
    echo ".opam not initialized, calling init"
    opam init --disable-sandboxing
    opam switch create heroku --empty
fi
cd $BUILD_DIR
pwd
opam switch heroku
eval $(opam env)
echo "Installing deps"
OPAMSOLVERTIMEOUT=6000 opam install . --deps-only --locked -y
opam env
eval $(opam env)
echo "Building"
dune build @install
echo $BUILD_DIR
dune install --prefix /app/_build
if [[ -e $BUILD_DIR/Procfile ]]; then
    echo "procfile 1"
    cp $BUILD_DIR/Procfile /app/Procfile
fi
rm -rf $BUILD_DIR/*
mv /app/_build/* $BUILD_DIR
if [[ -e /app/Procfile ]]; then
    echo "procfile 2"
    mv /app/Procfile $BUILD_DIR/Procfile
fi
echo "Copying .opam"
rm -rf $CACHE_DIR/.opam && cp -r ~/.opam $CACHE_DIR/.opam
rm -rf ~/.opam
